### i3-gaps config written "from scratch" by aqwurz (u/AntazarOfQwurz)
### (based on the default config and anything that is attributed)
### Do whatever you want with it, but I encourage you to attribute whatever you
### have copied to the "original" author, like I have tried to do!
###  
### This uses the Hyper key as a modifier as well as the Super (Win) key. Add 
### this to your ~/.Xmodmap to use Caps Lock as a Hyper key, like I do:
###
###	clear lock
###	remove mod4 = Hyper_L ! fixes an issue where the Hyper key behaves like a 
###                       ! Super key
###	add mod3 = Hyper_L
###

# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $sup Mod4
set $hyp Mod3

# just to be sure
set $mod Mod4

# i3lock command - generated by i3lcc
set $i3l i3lock -c 00000000 -B 10 --color 00000080 --noinput-text "stahp" --greeter-text "" --verif-text "hmm" --wrong-text "no" --greeter-color FFFFFFFF --verif-color FFFFFFFF --wrong-color FFFFFFFF --time-str "%H:%M:%S" --date-str "%Y-%m-%d" --time-color FFFFFFFF --date-color FFFFFFFF --ring-color FFFFFF00 --inside-color 00000080 --ringver-color 808080FF --insidever-color 20202080 --ringwrong-color FF0000FF --insidewrong-color 20000080 --keyhl-color 00FF00FF --bshl-color 008000FF --line-color 00000000 --separator-color 00000000 --ignore-empty-password --indicator --pass-power-keys --pass-volume-keys --pass-media-keys --pass-screen-keys --clock --radius 90 --ring-width 3 

###############
# STYLE BLOCK #
###############

# wal colour setting (in case I want titlebars)

# Set colors from Xresources
# Change 'color7' and 'color2' to whatever colors you want i3 to use 
# from the generated scheme.
# NOTE: The '#f0f0f0' in the lines below is the color i3 will use if
# it fails to get colors from Xresources.
set_from_resource $fg i3wm.color7 #f0f0f0
set_from_resource $bg i3wm.color2 #f0f0f0

# class                 border  backgr. text indicator child_border
client.focused          $bg     $bg     $fg  $bg       $bg
client.focused_inactive $bg     $bg     $fg  $bg       $bg
client.unfocused        $bg     $bg     $fg  $bg       $bg
client.urgent           $bg     $bg     $fg  $bg       $bg
client.placeholder      $bg     $bg     $fg  $bg       $bg

client.background       $bg

# font for window titles
font pango:monospace 8

# size of gaps
gaps inner 15
gaps outer 0
gaps top 0
gaps bottom 15
gaps left 15
gaps right 15
smart_borders no_gaps
#smart_gaps on

# size of rounded corners
border_radius 0

# remove borders
new_window none
default_border pixel 0
hide_edge_borders both
for_window [class="^.*"] border pixel 0

# makes nmtui into a "system tray app"
for_window [ title="nmtui"  ] floating enable
for_window [ title="nmtui"  ] move right 582
for_window [ title="nmtui"  ] move up 276
for_window [ title="nmtui"  ] resize shrink width 126 px or 126 ppt

# makes feh and mpv always floating - nice to use with tuir
for_window [ title="feh"  ] floating enable
for_window [ title="mpv"  ] floating enable

# same for matplotlib figures
for_window [ title="^Figure*"  ] floating enable

# in-browser bank authentication too
for_window [ title="^BankID*" ] floating enable

# x-win make floating
for_window [ class="X-Win32 PC X Server" ] floating enable

# attempt for steam friend list
for_window [ title="Friends List" ] floating enable

# attempt for zoom notifications
for_window [ title="zoom" ] floating enable

###############
# START BLOCK #
###############

exec setxkbmap -layout 'no,ru,us' -option 'grp:shifts_toggle' -option compose:rctrl-altgr
exec_always export QT_QPA_PLATFORMTHEME=qt5ct
exec_always export MOZ_X11_EGL=1
exec_always export XDG_RUNTIME_DIR=/run/user/$(id -u)
exec_always export WINIT_X11_SCALE_FACTOR=1.666666666666667
exec mkfifo /tmp/xobpipe
exec tail -f /tmp/xobpipe | xob -c ~/.cache/wal/xob.cfg 
#exec feh --bg-fill ~/backgrounds/bkg
#exec python ~/prog/bginit.py
exec pkill picom; picom --respect-prop-shadow --detect-rounded-corners &
exec redshift &
exec polybar -r default &
exec polybar -r monitor-normal &
exec libinput-gestures &
#exec optimus-manager-qt &
#exec conky -c ~/.config/conky/bottombar
exec xscreensaver
exec ~/.config/i3/scripts/appear.sh
exec ~/.config/i3/scripts/scratchlaunch.sh
exec ~/prog/bkgset.sh same ~/.bkg
#exec dunst -conf ~/.cache/wal/dunstrc &
#exec_always --no-startup-id i3wsr &
exec pcmanfm -d &
exec xmodmap ~/.Xmodmap
exec thunderbird --headless &
exec playerctld daemon &
exec mpd &
exec_always mpv ~/.config/i3/scripts/startup.mp3

###############
# MISC. BLOCK #
###############

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
#exec --no-startup-id xss-lock --transfer-sleep-lock -- $i3l
exec --no-startup-id xss-lock --transfer-sleep-lock -- xscreensaver-command -lock
#exec --no-startup-id xss-lock --transfer-sleep-lock -- physlock -p "$(figlet -cf slant antoine | lolcat && echo "$(fortune -s | figlet -cf term)")"

set $script_path ~/.config/i3/meta_workspaces.py

#enable switching from one workspace to another using the same command
#eg.: W1 -> $mod+2 -> W2 -> $mod+2 -> W1
workspace_auto_back_and_forth yes


###############
# BINDS BLOCK #
###############

## Misc

# Use Mouse+$sup to drag floating windows to their wanted position
floating_modifier $sup

################################################################################
# Esc - F1 - Insert - Delete
################################################################################

# Use pactl to adjust volume in PulseAudio.
## Media controls // Increase volume // fn f3 
bindsym XF86AudioRaiseVolume exec --no-startup-id ~/.config/i3/scripts/volumechange.sh up
## Media controls // Decrease volume // fn f2
bindsym XF86AudioLowerVolume exec --no-startup-id ~/.config/i3/scripts/volumechange.sh down
## Media controls // Toggle speaker mute // fn f1
bindsym XF86AudioMute exec --no-startup-id ~/.config/i3/scripts/volumechange.sh mute
## Media controls // Toggle microphone mute // fn unknown
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
## Miscellaneous // Toggle touchpad // fn f6
bindsym XF86TouchpadToggle exec --no-startup-id ~/.config/i3/scripts/touchpadtoggle.sh
## Miscellaneous // Take screenshot // prt sc
bindsym Print exec scrot '%Y-%m-%d_%H.%M.%S_$wx$h.png' -e 'mv $f ~/screenshots/' 
## Miscellaneous // Take snipped screenshot // shift prt sc
#does not work
#bindsym Shift+Print exec scrot '%Y-%m-%d_%H.%M.%S_$wx$h.png' -sfe 'mv $f ~/screenshots/' 

# Use brightnessctl to adjust brightness.
## Media controls // Decrease laptop display brightness // fn f4
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
## Media controls // Increase laptop display brightness // fn f5
bindsym XF86MonBrightnessUp exec brightnessctl set +5%

################################################################################
# Bar - 1 - Backslash - Backspace
################################################################################

# meta_workspaces by mrconter1
# https://github.com/mrconter1/i3_meta_workspaces

# change to workspace
## Workspaces // Change to workspace X1 (or previous workspace) //  1
bindsym $sup+1 exec python $script_path -w 1
## Workspaces // Change to workspace X2 (or previous workspace) //  2
bindsym $sup+2 exec python $script_path -w 2
## Workspaces // Change to workspace X3 (or previous workspace) //  3
bindsym $sup+3 exec python $script_path -w 3
## Workspaces // Change to workspace X4 (or previous workspace) //  4
bindsym $sup+4 exec python $script_path -w 4
## Workspaces // Change to workspace X5 (or previous workspace) //  5
bindsym $sup+5 exec python $script_path -w 5
## Workspaces // Change to workspace X6 (or previous workspace) //  6
bindsym $sup+6 exec python $script_path -w 6
## Workspaces // Change to workspace X7 (or previous workspace) //  7
bindsym $sup+7 exec python $script_path -w 7
## Workspaces // Change to workspace X8 (or previous workspace) //  8
bindsym $sup+8 exec python $script_path -w 8
## Workspaces // Change to workspace X9 (or previous workspace) //  9
bindsym $sup+9 exec python $script_path -w 9
## Workspaces // Change to workspace X0 (or previous workspace) //  0
bindsym $sup+0 exec python $script_path -w 0

# move focused container to workspace
## Workspaces // Move focused window to workspace X1 (or previous workspace) //  shift 1
bindsym $sup+Shift+1 exec python $script_path -mw 1
## Workspaces // Move focused window to workspace X2 (or previous workspace) //  shift 2
bindsym $sup+Shift+2 exec python $script_path -mw 2
## Workspaces // Move focused window to workspace X3 (or previous workspace) //  shift 3
bindsym $sup+Shift+3 exec python $script_path -mw 3
## Workspaces // Move focused window to workspace X4 (or previous workspace) //  shift 4
bindsym $sup+Shift+4 exec python $script_path -mw 4
## Workspaces // Move focused window to workspace X5 (or previous workspace) //  shift 5
bindsym $sup+Shift+5 exec python $script_path -mw 5
## Workspaces // Move focused window to workspace X6 (or previous workspace) //  shift 6
bindsym $sup+Shift+6 exec python $script_path -mw 6
## Workspaces // Move focused window to workspace X7 (or previous workspace) //  shift 7
bindsym $sup+Shift+7 exec python $script_path -mw 7
## Workspaces // Move focused window to workspace X8 (or previous workspace) //  shift 8
bindsym $sup+Shift+8 exec python $script_path -mw 8
## Workspaces // Move focused window to workspace X9 (or previous workspace) //  shift 9
bindsym $sup+Shift+9 exec python $script_path -mw 9
## Workspaces // Move focused window to workspace X0 (or previous workspace) //  shift 0
bindsym $sup+Shift+0 exec python $script_path -mw 0

# move focused container to workspace and change to that workspace
## Workspaces // Move focused window to workspace X1 (or previous workspace) and change to same workspace //  alt 1
bindsym $sup+Mod1+1 exec python $script_path -mw 1 && python $script_path -w 1
## Workspaces // Move focused window to workspace X2 (or previous workspace) and change to same workspace //  alt 2
bindsym $sup+Mod1+2 exec python $script_path -mw 2 && python $script_path -w 2
## Workspaces // Move focused window to workspace X3 (or previous workspace) and change to same workspace //  alt 3
bindsym $sup+Mod1+3 exec python $script_path -mw 3 && python $script_path -w 3
## Workspaces // Move focused window to workspace X4 (or previous workspace) and change to same workspace //  alt 4
bindsym $sup+Mod1+4 exec python $script_path -mw 4 && python $script_path -w 4
## Workspaces // Move focused window to workspace X5 (or previous workspace) and change to same workspace //  alt 5
bindsym $sup+Mod1+5 exec python $script_path -mw 5 && python $script_path -w 5
## Workspaces // Move focused window to workspace X6 (or previous workspace) and change to same workspace //  alt 6
bindsym $sup+Mod1+6 exec python $script_path -mw 6 && python $script_path -w 6
## Workspaces // Move focused window to workspace X7 (or previous workspace) and change to same workspace //  alt 7
bindsym $sup+Mod1+7 exec python $script_path -mw 7 && python $script_path -w 7
## Workspaces // Move focused window to workspace X8 (or previous workspace) and change to same workspace //  alt 8
bindsym $sup+Mod1+8 exec python $script_path -mw 8 && python $script_path -w 8
## Workspaces // Move focused window to workspace X9 (or previous workspace) and change to same workspace //  alt 9
bindsym $sup+Mod1+9 exec python $script_path -mw 9 && python $script_path -w 9
## Workspaces // Move focused window to workspace X0 (or previous workspace) and change to same workspace //  alt 0
bindsym $sup+Mod1+0 exec python $script_path -mw 0 && python $script_path -w 0

# change meta workspace
## Workspaces // Change meta-workspace to 1X //  Ctrl 1
bindsym $sup+Control+1 exec python $script_path -m 1
## Workspaces // Change meta-workspace to 2X //  Ctrl 2
bindsym $sup+Control+2 exec python $script_path -m 2
## Workspaces // Change meta-workspace to 3X //  Ctrl 3
bindsym $sup+Control+3 exec python $script_path -m 3
## Workspaces // Change meta-workspace to 4X //  Ctrl 4
bindsym $sup+Control+4 exec python $script_path -m 4
## Workspaces // Change meta-workspace to 5X //  Ctrl 5
bindsym $sup+Control+5 exec python $script_path -m 5
## Workspaces // Change meta-workspace to 6X //  Ctrl 6
bindsym $sup+Control+6 exec python $script_path -m 6
## Workspaces // Change meta-workspace to 7X //  Ctrl 7
bindsym $sup+Control+7 exec python $script_path -m 7
## Workspaces // Change meta-workspace to 8X //  Ctrl 8
bindsym $sup+Control+8 exec python $script_path -m 8
## Workspaces // Change meta-workspace to 9X //  Ctrl 9
bindsym $sup+Control+9 exec python $script_path -m 9
## Workspaces // Change meta-workspace to 0X //  Ctrl 0
bindsym $sup+Control+0 exec python $script_path -m 0

################################################################################
# Tab - Q - Aring - Apostrophe
################################################################################

# switch theme
## Appearance // Toggle theme (deprecated) //  Tab
bindsym $sup+Tab exec python ~/prog/switchTheme.py

# master mic mute
## Media controls // Toggle microphone // caps Tab
bindsym $hyp+Tab exec ~/.config/i3/scripts/mictoggle.sh

# kill focused window
## Windows // Close focused window // caps q
bindsym $hyp+q kill

# exit i3 (logs you out of your X session)
## System // Exit i3 (with confirm) //  q
bindsym $sup+q exec ".config/rofi/scripts/promptmenu.sh -y 'i3-msg exit' -q 'Do you really want to exit i3? This will end your X session.' -o 'Yes, exit i3'"

# next/previous workspace
## Workspaces // Change to previous workspace //  w
bindsym $sup+w workspace back_and_forth
## Workspaces // Change to previous workspace //  w
bindsym $sup+Shift+w workspace back_and_forth
## Workspaces // Move focused window to previous workspace //  shift w
#bindsym $sup+Shift+w move container to workspace back_and_forth
## Workspaces // Move focused window to previous workspace and change to same workspace //  alt w
bindsym $sup+Mod1+w exec i3-msg "move container to workspace back_and_forth" && i3-msg "workspace back_and_forth"

# window selector
## Windows // Select window from list // caps w
bindsym $hyp+w exec ~/.config/rofi/scripts/multiscript.sh -w

# start an "IDE" from an nnn session
# bindsym $sup+e exec ~/.config/i3/scripts/startide.sh

# emoji selector
## Miscellaneous // Insert emoji from list // caps e
bindsym $hyp+e exec rofimoji -a clipboard

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
## System // Refresh i3 //  r
bindsym $sup+r restart

# reload the configuration file
## System // Reload i3 config //  alt r
bindsym $sup+Mod1+r reload

# powermenu
## System // Open power menu // caps r
bindsym $hyp+r exec ~/.config/rofi/scripts/powermenu.sh

# scratchpad
## Windows // Move focused window to scratchpad //  shift t
bindsym $sup+Shift+t move scratchpad
## Windows // Toggle scratchpad visibility, and cycle scratchpad windows //  t
bindsym $sup+t scratchpad show

# thunderbird as mail notification "daemon"
## Programs // Launch Thunderbird // caps t
bindsym $hyp+t exec ~/.config/i3/scripts/thunderbird.sh

# watch a youtube video with ytfzf - enter keyword, then select video
## Miscellaneous // Watch a YouTube video //  y
bindsym $sup+y exec ytfzf -D
## Miscellaneous // Watch a YouTube video (I'm feeling lucky) //  shift y
bindsym $sup+Shift+y exec ytfzf -aD

# check contagion stats for Moss
## Miscellaneous // Show contagion stats for Moss //  u
#bindsym $sup+u exec python ~/prog/moss_contagion.py

# polybar reboot
## System // Restart status bar //  p
bindsym $sup+p exec pkill polybar && polybar -r default 
## System // Launch status bar on external display //  shift p
bindsym $sup+Shift+p exec polybar -r monitor-normal 
# picom reboot
## System // Disable transparency and animations // caps p
bindsym $hyp+p exec pkill picom
## System // Enable transparency and animations // caps shift p
bindsym $hyp+Shift+p exec picom

################################################################################
# A - S - Ae - Return
################################################################################

# focus the parent container
## Windows // Change focus to parent container //  a
bindsym $sup+a focus parent

# focus the child container
## Windows // Change focus to child container //  shift a
bindsym $sup+Shift+a focus child

# change container layout (stacked, tabbed)
## Windows // Change container layout to tabbed //  s
bindsym $sup+s layout tabbed
## Windows // Change container layout to stacked //  shift s
bindsym $sup+Shift+s layout stacking

# swap two containers by u/vikarjramun
mode "swap" {
    # change workspace
    bindsym $sup+1 exec python $script_path -w 1
    bindsym $sup+2 exec python $script_path -w 2
    bindsym $sup+3 exec python $script_path -w 3
    bindsym $sup+4 exec python $script_path -w 4
    bindsym $sup+5 exec python $script_path -w 5
    bindsym $sup+6 exec python $script_path -w 6
    bindsym $sup+7 exec python $script_path -w 7
    bindsym $sup+8 exec python $script_path -w 8
    bindsym $sup+9 exec python $script_path -w 9
    bindsym $sup+0 exec python $script_path -w 0

    # change focus
    bindsym $sup+Left focus left
    bindsym $sup+Down focus down
    bindsym $sup+Up focus up
    bindsym $sup+Right focus right

    # change focus (without mod)
    bindsym Left focus left
    bindsym Down focus down
    bindsym Up focus up
    bindsym Right focus right

    bindsym Return swap container with mark "swapee"; unmark "swapee"; mode "default";
    bindsym Escape unmark "swapee"; mode "default";
}
## Windows // Swap two windows (enter to swap, esc to cancel) // caps s
bindsym $hyp+s mark --add "swapee"; mode "swap"

# program launcher
## Programs // Launch program from list //  d
bindsym $sup+d exec ~/.config/rofi/scripts/multiscript.sh -r

# enter fullscreen mode for the focused container
## Windows // Toggle fullscreen //  f 
bindsym $sup+f fullscreen toggle

# launch a new instance of firefox
## Programs // Launch Firefox // caps f
bindsym $hyp+f exec MOZ_X11_EGL=1 firefox --new-instance

# adjust gamma of secondary display
## Media controls // Increase gamma of external screen //  g
bindsym $sup+g exec xrandr --output HDMI-1 --gamma 1.2
## Media controls // Reset gamma of external display //  shift g
bindsym $sup+Shift+g exec xrandr --output HDMI-1 --gamma 1

# and primary display
## Media controls // Increase gamma of laptop display //  alt g
bindsym $sup+Mod1+g exec xrandr --output eDP-1 --gamma 1.5
## Media controls // Reset gamma of laptop display //  alt shift g
bindsym $sup+Mod1+Shift+g exec xrandr --output eDP-1 --gamma 1

# insert greek letters - yes, I know greek kb layouts exist, but I don't type greek letters on a regular basis
## Miscellaneous // Insert greek letter from list // caps g
bindsym $hyp+g exec rofimoji -a clipboard -f greek_and_coptic

# split horisontally
## Windows // Split container horisontally //  h
bindsym $sup+h split v

# toggle split
## Windows // Toggle arrangement of containers //  alt h
bindsym $sup+Mod1+h layout toggle split

# rotate external screen
# monitor-flip by me
## Media controls // Flip external screen to 0° rotation // caps h 
bindsym $hyp+h exec ~/.config/i3/scripts/monitor-flip.sh normal

# insert kana - yes, I know japanese kb layouts exist, but I don't type kana on a regular basis
## Miscellaneous // Insert hiragana from list // caps j
bindsym $hyp+j exec rofimoji -a clipboard -f hiragana 
## Miscellaneous // Insert katakana from list // caps shift j
bindsym $hyp+Shift+j exec rofimoji -a clipboard -f katakana 

# autoclicker
## Media controls // Hold down right mouse button (UNSTABLE) //  k
bindsym $sup+k exec xdotool mousedown 3 && libinput-gestures-setup restart
## Media controls // Hold down left mouse button (UNSTABLE) //  shift k
bindsym $sup+Shift+k exec xdotool mousedown 1 && libinput-gestures-setup restart
## Media controls // Hold down middle mouse button (UNSTABLE) //  alt k
bindsym $sup+Mod1+k exec xdotool mousedown 2 && libinput-gestures-setup restart

# start a terminal
## Programs // Open terminal with tmux //  t
bindsym $sup+Return exec WINIT_X11_SCALE_FACTOR=1.666666666666667 alacritty -e tmux
## Programs // Open terminal // caps t
bindsym $hyp+Return exec WINIT_X11_SCALE_FACTOR=1.666666666666667 alacritty # without tmux

################################################################################
# LT - Z - M - Dash
################################################################################

# i3-quiet by vrde
# https://github.com/vrde/i3-quiet
# bindsym $sup+z exec ~/.config/i3/i3-quiet/quiet-cmd.py
# bindsym $sup+Control+z exec ~/.config/i3/i3-quiet/quiet-cmd.py toggle
# exec_always ~/.config/i3/i3-quiet/quiet-toggle-bar.py

# and here's my easier solution
## Windows // Enter "focused mode" // caps z
bindsym $hyp+z exec ~/.config/i3/scripts/i3quiet-easy.sh

# list copied strings with rofi-greenclip
## Miscellaneous // Select recently copied string from list //  z
bindsym $sup+z exec rofi -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}'

# locks
## System // Lock i3 with i3lock // caps x
bindsym $hyp+x exec $i3l
## System // Activate screensaver (locks in few seconds) //  x
bindsym $sup+x exec xscreensaver-command -activate
## System // Lock i3 with screensaver //  shift x
bindsym $sup+Shift+x exec xscreensaver-command -lock
## System // Lock i3 with physlock //  alt x
bindsym $sup+Mod1+x exec physlock -p "$(figlet -cf slant antoine | lolcat && echo "$(fortune -s | figlet -cf term)")"

# keybind list by quantumbyte
# https://www.reddit.com/r/i3wm/comments/e1x9n6/keybindings_menu_not_dmenurofi/f8strmr/
## Miscellaneous // List raw i3 keybindings //  c
bindsym $sup+c exec cat ~/.config/i3/config | grep 'bindsym' | grep -v '^\s*#' | sed 's/bindsym / /' | rofi -dmenu -theme "~/.config/rofi/themes/appsmenu.rasi"
# another keybind list by Mathieu Clabaut
# https://gitlab.com/matclab/rofi-i3-shortcut-help
## Miscellaneous // List i3 keybindings //  alt c
bindsym $sup+Mod1+c exec rofi -modi shortcut:/home/antoine/.config/i3/scripts/shortcut.sh -show shortcut

# find the cursor
## Miscellaneous // Locate cursor // caps c
bindsym $hyp+c exec xcursorlocate

# split vertically
## Windows // Split container vertically //  v 
bindsym $sup+v split h

# toggle split
## Windows // Toggle arrangement of containers //  alt v
bindsym $sup+Mod1+v layout toggle split

# rotate external screen
# monitor-flip by me
## Media controls // Flip external display to -90° rotation // caps v
bindsym $hyp+v exec ~/.config/i3/scripts/monitor-flip.sh left
## Media controls // Flip external display to 90° rotation // caps shift v
bindsym $hyp+Shift+v exec ~/.config/i3/scripts/monitor-flip.sh right
## Media controls // Flip external display to 0° rotation // caps alt v
bindsym $hyp+Mod1+v exec ~/.config/i3/scripts/monitor-flip.sh normal

# wal
## Appearance // Reload background-based theme //  b
bindsym $sup+b exec wal -R

# wal requiem
#bindsym $hyp+b exec ~/.config/i3/scripts/bufabkg.sh
## Appearance // Switch to light mode // caps b
bindsym $hyp+b exec ~/prog/bkgset.sh light ~/.bkg
## Appearance // Switch to dark mode // caps shift b
bindsym $hyp+Shift+b exec ~/prog/bkgset.sh dark ~/.bkg

# control the music
## Miscellaneous // Open music player //  n
bindsym $sup+n exec WINIT_X11_SCALE_FACTOR=1.666666666666667 alacritty -e /home/antoine/.config/i3/scripts/ncmpcpp_launch.sh

# switch between display configurations
#bindsym $sup+m exec autorandr -l mobile
## Media controls // Disconnect external display //  m
bindsym $sup+m exec autorandr -l horizontal && ~/.config/i3/scripts/monitor-flip.sh normal && fc-cache -f && polybar-msg cmd restart

################################################################################
# Space - Left - Down - Right
################################################################################

# change focus between tiling / floating windows
## Windows // Change focus between tiling and floating windows //  ctrl space 
bindsym $sup+Control+space focus mode_toggle

# toggle tiling / floating
## Windows // Toggle window between tiling and grid alignment //  space
bindsym $sup+space floating toggle

# change focus
## Windows // Change focus to the left (wraps around) //  left  
bindsym $sup+Left focus left
## Windows // Change focus downward (wraps around) //  down
bindsym $sup+Down focus down
## Windows // Change focus upward (wraps around) //  up
bindsym $sup+Up focus up
## Windows // Change focus to the right (wraps around) //  right
bindsym $sup+Right focus right

# move focused window
## Windows // Move focused window to the left //  shift left
bindsym $sup+Shift+Left move left
## Windows // Move focused window downward //  shift down
bindsym $sup+Shift+Down move down
## Windows // Move focused window upward //  shift up
bindsym $sup+Shift+Up move up
## Windows // Move focused window to the right //  shift right
bindsym $sup+Shift+Right move right

# resize 2 hyper boogaloo
## Windows // Decrease width of focused window // caps left 
bindsym $hyp+Left resize shrink width 1 px or 1 ppt
## Windows // Increase height of focused window // caps down
bindsym $hyp+Down resize grow height 1 px or 1 ppt
## Windows // Decrease height of focused window // caps up
bindsym $hyp+Up resize shrink height 1 px or 1 ppt
## Windows // Increase width of focused window // caps right
bindsym $hyp+Right resize grow width 1 px or 1 ppt

## Windows // Decrease width of focused window quickly // caps shift left 
bindsym $hyp+Shift+Left resize shrink width 10 px or 10 ppt
## Windows // Increase height of focused window quickly // caps shift down
bindsym $hyp+Shift+Down resize grow height 10 px or 10 ppt
## Windows // Decrease height of focused window quickly // caps shift up
bindsym $hyp+Shift+Up resize shrink height 10 px or 10 ppt
## Windows // Increase width of focused window quickly // caps shift right
bindsym $hyp+Shift+Right resize grow width 10 px or 10 ppt

## Windows // Narrow gaps between windows // caps alt down
bindsym $hyp+Mod1+Down gaps inner current minus 3
## Windows // Widen gaps between windows // caps alt up
bindsym $hyp+Mod1+Up gaps inner current plus 3
## Windows // Narrow gaps around windows // caps alt left
bindsym $hyp+Mod1+Left gaps outer current minus 3
## Windows // Widen gaps around windows // caps alt right
bindsym $hyp+Mod1+Right gaps outer current plus 3

## Windows // Narrow gaps between windows quickly // caps alt shift down
bindsym $hyp+Mod1+Shift+Down gaps inner current minus 12
## Windows // Widen gaps between windows quickly // caps alt shift up
bindsym $hyp+Mod1+Shift+Up gaps inner current plus 12
## Windows // Narrow gaps around windows quickly // caps alt shift left
bindsym $hyp+Mod1+Shift+Left gaps outer current minus 12
## Windows // Widen gaps around windows quickly // caps alt shift right
bindsym $hyp+Mod1+Shift+Right gaps outer current plus 12

###############
# TODOS BLOCK #
###############
